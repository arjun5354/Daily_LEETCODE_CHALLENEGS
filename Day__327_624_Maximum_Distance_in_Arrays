/*    Scroll below to see JAVA code also    */
/*
    YOUTUBE VIDEO ON THIS Qn    : https://www.youtube.com/watch?v=OO6i7g3it4Q
    Company Tags                : will update soon
    Leetcode Link               : https://leetcode.com/problems/maximum-distance-in-arrays
*/


/**************************************************** C++ ****************************************************/
//Approach - Simple Greedy
//T.C : O(m)
//S.C : O(1)
class Solution {
public:
    int maxDistance(vector<vector<int>>& nums) {
        int mini=INT_MAX;
        int maxi=INT_MIN;
        int dist=0;
        for(int i=0;i<nums.size()-1;i++){
            mini=min(mini,nums[i][0]);
            maxi=max(maxi,nums[i][nums[i].size()-1]);
            dist=max({dist,abs(nums[i+1][nums[i+1].size()-1]-mini),abs(nums[i+1][0]-maxi)});
        }
        return dist;
    }
};

/**************************************************** JAVA ****************************************************/
//Approach - Simple Greedy
//T.C : O(m)
//S.C : O(1)
class Solution {
    public int maxDistance(List<List<Integer>> arrays) {
        int MIN = arrays.get(0).get(0);
        int MAX = arrays.get(0).get(arrays.get(0).size() - 1);

        int result = 0;

        for (int i = 1; i < arrays.size(); i++) {
            int currMin = arrays.get(i).get(0);
            int currMax = arrays.get(i).get(arrays.get(i).size() - 1);

            result = Math.max(result, Math.max(Math.abs(currMin - MAX), Math.abs(currMax - MIN)));

            MAX = Math.max(MAX, currMax);
            MIN = Math.min(MIN, currMin);
        }
        return result;
    }
}
